/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sinh Nguyá»…n (https://sketchfab.com/nlsinh)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/hero-d51e535a713c4491b5dcb4b8632ff5cd
Title: Hero
*/
"use client";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function HeroModel(props) {
  const group = useRef();
  const modelRef = useRef();
  const { nodes, materials, animations } = useGLTF("/models/Hero-transformed.glb");
  const { actions } = useAnimations(animations, group);

  // Animation logic for the model's floating effect
  useFrame((state) => {
    if (modelRef.current) {
      modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime) * 0.15;
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      {/* Main model */}
      <group
        ref={modelRef}
        position={[0, -1.5, 0]}
        scale={[0.25, 0.25, 0.25]}
        rotation={[0, -0.25, 0.1]}
      >
        <group name="Sketchfab_Scene">
          <group name="RootNode">
            <group name="power" position={[0, 0.039, 0]} scale={[0.943, 1, 0.943]}>
              <mesh
                name="power_blinn1_0"
                castShadow
                receiveShadow
                geometry={nodes.power_blinn1_0.geometry}
                material={materials.blinn1}
              />
            </group>
          </group>
          <primitive object={nodes._rootJoint} />
          <skinnedMesh
            name="Object_88"
            geometry={nodes.Object_88.geometry}
            material={materials.warriormodel1warrior}
            skeleton={nodes.Object_88.skeleton}
          />
          <mesh
            name="pPlane3_blinn3_0"
            castShadow
            receiveShadow
            geometry={nodes.pPlane3_blinn3_0.geometry}
            material={materials.blinn3}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Hero-transformed.glb");